# Notes
#   C OR ^ = Control Key


## BINDINGS ####################################################################
################################################################################
## NON-PREFIX BINDINGS ##
bind -n C-y split-window -h # split horizontal
bind -n C-x split-window -v # split vertical
bind -n C-Y split-window -h -c "#{pane_current_path}" # split horizontal from current path
bind -n C-X split-window -v -c "#{pane_current_path}" # split vertical from current path
bind -n C-z resize-pane -Z # zoom into selected pane

## iTerm2 ##
## Switch Tabs with Option+Num. ##
# bind -n ¡ if-shell 'tmux select-window -t 1' '' 'new-window -t 1'
# bind -n ™ if-shell 'tmux select-window -t 2' '' 'new-window -t 2'
# bind -n £ if-shell 'tmux select-window -t 3' '' 'new-window -t 3'
# bind -n ¢ if-shell 'tmux select-window -t 4' '' 'new-window -t 4'
# bind -n ∞ if-shell 'tmux select-window -t 5' '' 'new-window -t 5'
# bind -n § if-shell 'tmux select-window -t 6' '' 'new-window -t 6'
# bind -n ¶ if-shell 'tmux select-window -t 7' '' 'new-window -t 7'
# bind -n • if-shell 'tmux select-window -t 8' '' 'new-window -t 8'
# bind -n ª if-shell 'tmux select-window -t 9' '' 'new-window -t 9'

## Alacritty ##
## Switch Tabs with Option+Num. ##
bind -n M-1 if-shell 'tmux select-window -t 1' '' 'new-window -t 1'
bind -n M-2 if-shell 'tmux select-window -t 2' '' 'new-window -t 2'
bind -n M-3 if-shell 'tmux select-window -t 3' '' 'new-window -t 3'
bind -n M-4 if-shell 'tmux select-window -t 4' '' 'new-window -t 4'
bind -n M-5 if-shell 'tmux select-window -t 5' '' 'new-window -t 5'
bind -n M-6 if-shell 'tmux select-window -t 6' '' 'new-window -t 6'
bind -n M-7 if-shell 'tmux select-window -t 7' '' 'new-window -t 7'
bind -n M-8 if-shell 'tmux select-window -t 8' '' 'new-window -t 8'
bind -n M-9 if-shell 'tmux select-window -t 9' '' 'new-window -t 9'

## PREFIX BINDINGS ##
bind C-c new-window -c '#{pane_current_path}' # create new window with same path as current window
# bind-key C-b send-keys 'tat && exit' '^m' # break current pane to new tmux-instance
# bind-key b break-pane -d # break current pane to new tab
# bind-key C-b send-keys 'tat && exit' '^m' # break window to a new tmux session

# FZF switch between sessions
bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"
# kill current session and move to next
bind C-k run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'
# Easily swap a pane (targeted by pane number) with the current pane
bind C-s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"
# re-source file
bind r source-file ~/.config/tmux/tmux.conf \; display-message "~/.tmux.conf reloaded"


## SETTINGS ####################################################################
################################################################################
set -g default-terminal "screen-256color"
set -g terminal-overrides ",xterm-256color:RGB"
set -g prefix C-a
set -g base-index 1 # by default, sessions start at 0
set -g renumber-windows on # just in case it was off
set -g detach-on-destroy off # don't exit from tmux when closing a session
set -g history-limit 1000000 # history limit
set -g status-left-length 50 # set length of file name
set -g status-right " #(date '+%a, %b %d - %I:%M') " # set output of right side of status bar
set -g mouse on # use mouse with tmux
set -g escape-time 0 # remove wait time on esc key
set -g set-clipboard on # use system clipboard
set -g status-position top # macOS / darwin style
setw -g mode-keys vi
set -g pane-active-border-style 'fg=magenta,bg=default'
set -g pane-border-style 'fg=brightblack,bg=default'

# set colors for status bar if not using catppuccin
# set-option -g status-bg
# set-option -g status-fg


## TMUX PLUGIN MANAGER #########################################################
################################################################################
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'

# set -g @plugin 'omerxx/tmux-sessionx'
# set -g @sessionx-bind 'C-j' # Open the sessionx
# set -g @sessionx-filter-current 'false' # remove current buffer from list
# set -g @sessionx-bind-kill-session 'ctrl-k' # use k to delete selected buffer

set -g @plugin 'tmux-plugins/tmux-resurrect' # keep state during restarts
set -g @resurrect-strategy-nvim 'session' # keep vim states during restarts

set -g @plugin 'catppuccin/tmux'
set -g @catppuccin_window_left_separator ""
set -g @catppuccin_window_right_separator " "
set -g @catppuccin_window_middle_separator " █"
set -g @catppuccin_window_number_position "right"
set -g @catppuccin_window_default_fill "number"
set -g @catppuccin_window_default_text "#W"
set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_window_current_text "#W#{?window_zoomed_flag,(),}"
set -g @catppuccin_status_modules_right "directory meetings date_time"
set -g @catppuccin_status_modules_left "session"
set -g @catppuccin_status_left_separator  " "
set -g @catppuccin_status_right_separator " "
set -g @catppuccin_status_right_separator_inverse "no"
set -g @catppuccin_status_fill "icon"
set -g @catppuccin_status_connect_separator "no"
set -g @catppuccin_directory_text "#{b:pane_current_path}"
set -g @catppuccin_meetings_text "#($HOME/.config/tmux/scripts/cal.sh)"
set -g @catppuccin_date_time_text "%H:%M"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'
########################################

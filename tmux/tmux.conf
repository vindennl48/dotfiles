#Startup Script
#######################
# run-shell 'open_dotfiles.sh'

#######################
## BINDINGS FOR TMUX ##
#######################

## GENERAL SETTINGS ##
# color options
#set -g default-terminal "tmux-256color"
#set -ga terminal-overrides ",*256col*:Tc"

# set colors for status bar
set-option -g status-bg "#84aae8"
set-option -g status-fg "#253b5e"

# set length of file name
set-option -g status-left-length 50

# set output of right side of status bar
set-option -g status-right " #(date '+%a, %b %d - %I:%M') "

# set tabs to start from 1 instead of 0
set-option -g base-index 1
set-option -g renumber-windows on

# use mouse with tmux
set -g mouse on

# remove wait time on esc key
set -sg escape-time 10
## -- ##

## Switch binding from Ctrl-b to Ctrl-a ##
unbind C-b
set-option -g prefix C-a
#bind-key C-a send-prefix
## -- ##

## NON-PREFIX BINDINGS ##
# split horizontal
bind-key -n C-y split-window -h
bind-key -n C-Enter split-window -h
# split vertical
bind-key -n C-x split-window -v
# zoom into selected pane
bind-key -n C-z resize-pane -Z
## -- ##

## RESIZE PANES ##
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5
## -- ##

## Smart pane switching with awareness of Vim splits. ##
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"

bind-key -T copy-mode    C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -T copy-mode-vi C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -T copy-mode    C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -T copy-mode-vi C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -T copy-mode    C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -T copy-mode-vi C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -T copy-mode    C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -T copy-mode-vi C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
## -- ##

## Switch Tabs with Alt+Num. ##
bind-key -n ¡ if-shell 'tmux select-window -t 1' '' 'new-window -t 1'
bind-key -n ™ if-shell 'tmux select-window -t 2' '' 'new-window -t 2'
bind-key -n £ if-shell 'tmux select-window -t 3' '' 'new-window -t 3'
bind-key -n ¢ if-shell 'tmux select-window -t 4' '' 'new-window -t 4'
bind-key -n ∞ if-shell 'tmux select-window -t 5' '' 'new-window -t 5'
bind-key -n § if-shell 'tmux select-window -t 6' '' 'new-window -t 6'
bind-key -n ¶ if-shell 'tmux select-window -t 7' '' 'new-window -t 7'
bind-key -n • if-shell 'tmux select-window -t 8' '' 'new-window -t 8'
bind-key -n ª if-shell 'tmux select-window -t 9' '' 'new-window -t 9'
## -- ##

# create new window
bind-key C-c new-window
# create new window with same path as current window
bind-key c new-window -c '#{pane_current_path}'

# Easily swap a pane (targeted by pane number) with the current pane
bind-key C-s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

## FZF ##
# bind-key -n C-f split-window -v -p 20 fzf
# switch between sessions
bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"
## -- ##

# break current pane to new tmux-instance
bind-key C-b send-keys 'tat && exit' '^m'

# # break current pane to new tab
# bind-key b break-pane -d
# break window to a new tmux session
bind-key C-b send-keys 'tat && exit' '^m'

# kill current session and move to next
bind-key k run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# Easily swap a pane (targeted by pane number) with the current pane
bind-key C-s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# Join pane
#bind-key C-m command-prompt -p "join pane from: "  "join-pane -h -s '%%'"
bind-key C-1 if-shell 'tmux join-pane -h -t :1' '' 'break-pane'
bind-key C-2 if-shell 'tmux join-pane -h -t :2' '' 'break-pane'
bind-key C-3 if-shell 'tmux join-pane -h -t :3' '' 'break-pane' 
bind-key C-4 if-shell 'tmux join-pane -h -t :4' '' 'break-pane'
bind-key C-5 if-shell 'tmux join-pane -h -t :5' '' 'break-pane'
bind-key C-6 if-shell 'tmux join-pane -h -t :6' '' 'break-pane'
bind-key C-7 if-shell 'tmux join-pane -h -t :7' '' 'break-pane'
bind-key C-8 if-shell 'tmux join-pane -h -t :8' '' 'break-pane'
bind-key C-9 if-shell 'tmux join-pane -h -t :9' '' 'break-pane'

# move panes around
#bind-key -n C-j swap-pane -s {bottom-of}
#bind-key -n C-k swap-pane -s {top-of}
#bind-key -n C-h swap-pane -s {left-of}
#bind-key -n C-l swap-pane -s {left-of}
# Easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# re-source file
bind-key C-r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Plugin Tmux Resurect
#run-shell ~/clone/path/resurrect.tmux

## Tmux Plugin Manager ##
########################################
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
########################################

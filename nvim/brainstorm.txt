-- PLUGINS
--   - Lazy.nvim
--   - Citppuccine
--   - Neotree
--   - Vim-Tmux-Navigator
--   - Treesitter
--   - Telescope
--   - Some sort of commenting engine
--   - Not sure what or if we want to do tag compeltion
--   - VimSneak
--   - Easy-Align or equivalent

--   - Possibly Harpoon? would also need:
--     - Plenary

Now we are looking at the mini.nvim suite
- mini.cursorword - underline all instances of the hovered word
- mini.align - align stuff to make things prettier
- mini.tabline - I think lazyVim had a cooler one but this would be useful
- mini.splitjoin - arguments expand to multiline or shrink to oneline


- not using
- mini.comment - might make things easier to have all in one place
- mini.animate - cool animations, not really necessary
- mini.indentscope - same as intent-blankline but better
-- END PLUGINS


-- OPTIONS
local set = vim.opt

-- line numbers to the left
set.nu = true
set.relativenumber = true
set.scrolloff = 5 -- dont scroll down lower than 5 lines

-- setting up 2 spaces for tabs
set.tabstop = 2
set.softtabstop = 2
set.shiftwidth = 2
set.expandtab = true
set.smartindent = true -- autoindenting

set.wrap = false -- wordwrap

-- stop backups, can have some issues
set.swapfile = false
set.backup = false

set.termguicolors = true -- good colors

set.signcolumn = "yes" -- leave room for widgets in gutter column

set.colorcolumn = "80" -- sets a bar for 80 chars

-- search functions
set.incsearch = true -- highlight as we search
set.ignorecase = true -- ignore case during search
set.smartcase = true -- ignores case during search unless a cap is used

set.fsync = true -- should prevent losing data on system crashes

-- END OPTIONS


-- KEYMAPS
vim.g.mapleader = '-'

local set = vim.keymap.set

-- Location Shortcuts
set("n", "es", ":e ~/.config/nvim/lua/config/keymaps.lua<cr>", { remap = false, desc = "Open vim keymaps" })
set("n", "ea", ":e ~/.oh-my-zsh/custom/general.zsh<cr>", { remap = false, desc = "Open bash alias commands" })
set("n", "ee", ":e ~/bin/dotfiles/UserNotes.md<cr>", { remap = false, desc = "Open User Notes" })

-- NORMAL MODE
set("n", ";", ":", { remap = false })
set("n", ":", ";", { remap = false })
set("n", "a", "A", { remap = false })
set("n", "d", "dd", { remap = false })
set("n", "J", "ddp", { remap = false })
set("n", "K", "kddpk", { remap = true })
set("n", "H", "<<", { remap = false, silent = true })
set("n", "L", ">>", { remap = false, silent = true })
set("n", "q1", ":q<cr>", { remap = false })
set("n", "c4", "c$", { remap = false })
set("n", "<leader>s", ":%s /", { remap = false, desc = "Search & Replace" })
set("n", "<leader>z", ":wincmd _<cr>:wincmd |", { remap = false, silent = true, desc = "Zoom into pane" })
set("n", "<leader>f", ":wincmd =<cr>", { remap = false, silent = true, desc = "Zoom out of pane" })
set("n", "<leader>y", ":vsp<cr><c-w>l", { remap = false, silent = true, desc = "Split pane horizontally" })
set("n", "<leader>x", ":sp<cr><c-w>j", { remap = false, silent = true, desc = "Split pane vertically" })
set("n", "<leader>b", ":bn<cr>", { remap = false, silent = true, desc = "Switch to next buffer" })
set("n", "<leader>v", ":bp<cr>", { remap = false, silent = true, desc = "Switch to prev buffer" })
set("n", "<C-k>", ":wincmd k<cr>", { remap = false, silent = true, silent = true, desc = "move to top split" })
set("n", "<C-j>", ":wincmd j<cr>", { remap = false, silent = true, silent = true, desc = "move to bottom split" })
set("n", "<C-h>", ":wincmd h<cr>", { remap = false, silent = true, silent = true, desc = "move to left split" })
set("n", "<C-l>", ":wincmd l<cr>", { remap = false, silent = true, silent = true, desc = "move to right split" })

-- SPECIFIC TO NEOTREE
set(
  "n",
  "<leader>n",
  function()
    require("neo-tree.command").execute({ toggle = true, dir = vim.loop.cwd() })
  end,
  { remap = false, silent = true, desc = "Open NeoTree" }
)

-- INSERT MODE
set("i", "jk", "<esc><esc>", { remap = false })

-- VISUAL MODE
set("v", "H", "<gv", { remap = false })
set("v", "L", ">gv", { remap = false })
set("v", "i", "I", { remap = false })
set("v", "I", "i", { remap = false })
set("v", "J", ":m '>+1<CR>gv=gv", { remap = false })
set("v", "K", ":m '<-2<CR>gv=gv", { remap = false })

-- MULTI MODES
set({ "n", "i", "v" }, "<esc>", "<esc><esc>", { remap = false })
set({ "n", "v" }, "<leader>Y", '"+y', { remap = false, desc = "Copy to System Clipboard" })
set("v", "<leader>cop", ":'<,'>w! ~/.cp<cr>", { remap = false, silent = true, desc = "Copy to temp buffer" })
set("n", "<leader>pas", ":r ~/.cp<cr>", { remap = false, silent = true, desc = "Paste from temp buffer" })
-- END KEYMAPS

